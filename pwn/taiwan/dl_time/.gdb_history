b main
r
si
si
x/gx 0x555555755008
x/3gx 0x555555755000
p/x *(struct link_maps*) 0x00007f148f39f170
p/x *(struct link_maps*)0x00007f148f39f170
p/x *(struct link_map*)0x00007fb4f1990170
i
uit
quit
start
si
p/x *(struct link_map*)0x00007fb4f1990170
x/3gx 0x555555755020
si
x/3gx 0x555555755008
p/x *(struct link_map*)0x00007fdff5f61180

set $l= *(struct link_map*)0x00007fb4f1990170
set $l= (struct link_map*)0x00007fb4f1990170
$l
*$l
p/x *$l
p/x $l
$l2=l->next->next
$l2
$l2=l->next->l->next
$l2=l_next->l_next
$l2=$l_next->l_next
$l2=$$l->l_next->l_next
$l2=$l->l_next->l_next
l->next
p/x $l->l->next
p/x *$l->l->next
set $l= (struct link_map*)0x00007fb4f1990170
p/x l->l_name
p/x $l->l_name
k
r
k
start
s
si
si
k
r
start
si
p/x *(struct link_map*)0x555555554570
set $l=(struct link_map*)0x555555554570
p/x $l
set $l2=$l->l_next->l->next
set $l2=$l->l_next->l_next
si
si
is
si
set $l2=$l->l_next->l_next
lay src
s
set $l2=$l->l_next->l_next
set $l=(struct link_map*)0x555555554570
set $l2=$l->l_next->l_next
lay src
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
step
set $l2=$l->l_next->l_next
quit
b main
r
si
x/wx 0x555555554570
quit
start
si
r
quit
start
si
cd ..
quit
start
si
x/wx 0x555555754ff8
si
x/wx 0x555555554570
x/gx 0x555555554570
si
xx/gx *$rip+0x200a92
x/gx *$rip+0x200a92
x/3gx 0x000000000201000
x/3gx 0x555555755000
s
lay asm
x/gx 0x555555755008
p/x *(struct link_map*)0x00007fa042c0c170
set $l= (struct link_map*)0x00007fa042c0c170
p/x $l
p/s $l
p/x * $l
set $l2= $l->l_next->l_next
p/x * $l2
lay asm
si
lay src
s
x/wx value
si
s
x/wx value
x/gx reloc_result addr
x/wx vaule
x/wx value
p/x $l2->l_nbuckets 
p/x $l2->l_gnu_buckets[0x1ceee48a %0x3f3]
p/x $l2->l_gnu_chain_zero[0x57b]
p/x $l2->l_gnu_chain_zero[0x57b]
p/x $l2->l_gnu_chain_zero[0x57b]
p/x $dynsym2[0x539]
p/x $dynsym2
p/x $l
p/x *$l
p/x *$l2

p/x *$l2->l_info[6]
 ser $dynstr2=(char*) 0x7fa0426439d0
 set $dynstr2=(char*) 0x7fa0426439d0
set $dynsym2= (Elf64_Sym*)0x7fa042635ee8
 set $dynstr2=(char*)0x7fa0426439d0
p/x $dymsym2[0x57b]
p/x $dynsym2[0x57b]
p/x $dynsym2+$dynsym2[0x57b]->st_name
p/s $dynsym2+$dynsym2[0x57b]->st_name
p/s $dynsym2+0x322c
p/s $dynstr2+0x322c
p/s $dynstr2+$dynsym2[0x57b]->st_name
set $rela(Elf64_Rela*)0x528
set $rela(Elf64_Rela*)0x528
set $rela=(Elf64_Rela*)0x528
set $rela@3
set *$rela@3
JMPREL
p/x JMPREL
p/x _JMPREL
p/x _DYNAMIC
p/x 
lay asm
p/x 
p/x _DYNAMIC
p/x $rela[1]
p/x $rela[0]
p/x _DYNAMIC
p/x _JMPREL
set *$rela@3
p/s $dynstr2+$dynsym2[0x57b]->st_name
set $rela =(Elf64_Rela*)0x555555754528
p/x $rela
p/x $rela@1
p/x *$rela@1
p/x *$rela@0
p/x *$rela@1
x/wx 0x201018
lay asm
lay reg
p/x *$rela@1->r-offset
p/x $rela@1->r-offset
x/wx *0x201018
p/x *(Elf64_Dyn*)$l2->l_info[5]
set $dynstr2=(char*)0x7ffff7a4bd78
set $dynstr2=(char*)0x7fa0426439d0
p/x *(Elf64_Dyn*)$l2->l_info[5]
p/x *(Elf64_Dyn*)$l2->l_info[6]
$dynsym2=(Elf64_Sym*)0x7fa042635ee8
set $dynsym2=(Elf64_Sym*)0x7fa042635ee8
p/s $dynstr2 +$dynsym[4]->st_name
p/s $dynstr2 +$dynsym[1]->st_name
set $dynsym2=(Elf64_Sym*)0x7fa042635ee8
p/s $dynstr2 +$dynsym[1]->st_name
p/s $dynstr2
p/s *$dynstr2
p/s $dynstr2 + $dynsym[4]->st_name
p/s $dynstr2 + $dynsym2[4]->st_name
p/s dynsym2[1]
p/s dynsym2[3]
p/s dynsym2[10]
p/s $dynsym2[10]
p/x $l2->l_addr + 0x1foa
p/x $l2->l_addr + 0x8aac0
x/i 0x7fa0426bcac0
p/x $dynstr2+0x1f0a
p/s $dynstr2+0x1f0a
lay asm
x/wx value
si
lay asm
s
p/s $dynstr2+0x1f0a
lay src
x/wx value
p $l2->l_nbuckets 
p/x $l2->l_gnu_buckets[0x1ceee48a % 0x3f3]
x/wx $l2->l_gnu_chain_zero[0x57b]
p $l2->l_nbuckets 
p/x $l2->l_gnu_buckets[0x1ceee48a % 0x3f3]
p/x $l2->l_gnu_chain_zero[0x57b]
p/x $dynsym2[0x3f3]
p/s dynstr2 + 0x226
p/s $dynstr2 + 0x226
p/x $dynsym2[0x57b]
p/s $dynstr2 + 0x322c
quit
lay asm
start
q
lay asm
start
k
start
quit
lay ams
lay asm
start
quit
lay asm
r
quit
